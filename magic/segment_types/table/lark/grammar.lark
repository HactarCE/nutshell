// Need three diff kinds of states:
// initial (input) state cannot be a reference -- just a _var or number
// napkin (neighbor, medial) states can be anything
// resultant (final) state cannot be a varname -- just a number or reference
// Neither initial nor resultant states can have compass directions, only medials

table: (line | _NL)+

line: VARNAME ":" /.+/                                     -> directive
  | initial napkin _end final [ARROW ptcd (_WS ptcd)*]     -> transition
  | VARNAME _WS? "=" _WS? _var  -> var_decl

initial: INT | _var
// Doing `napkin: (_sep medial permute_shorthand?)~1..8` invokes issue #190
// (grammar-compilation time explodes)
napkin: _napkin_transition~1..8
_napkin_transition: permute_shorthand | _sep medial
final: INT | reference
permute_shorthand: _sep medial _PERMUTE INT
_PERMUTE: _WS? "**" _WS?  // this has to be its own terminal, which I guess makes it function like an atom

_end: ";" _WS?  // XXX: this should maybe include sep? although LALR can't seem to handle it sadly
_sep: "," _WS?
ARROW: _WS? ("~>" | "->") _WS?


medial: COMPASS_DIR _WS (INT | map_var_expr | reference)
  | crange? (INT | map_var_expr | reference)  -> medial_range
  | crange? "[" map_var_expr "]"              -> medial_special_range
// LALR bugs if this is a terminal rather than a rule
crange: COMPASS_DIR _RANGE_SEP COMPASS_DIR _WS

reference: "[" PREVIOUS_BIND "]"                 -> binding
  | "[" PREVIOUS_BIND ":" _WS? map_var_expr "]"  -> mapping

ptcd: COMPASS_DIR ":" INT                                     -> ptcd_bare
  | COMPASS_DIR "[" ptcd_var_expr "]"                         -> ptcd_map_self
  | COMPASS_DIR "[" PREVIOUS_BIND ":" _WS? ptcd_var_expr "]"  -> ptcd_map_other

PREVIOUS_BIND: /0|NE|SE|SW|NW|N|E|S|W/
COMPASS_DIR: /NE|SE|SW|NW|N|E|S|W/

///// NORMAL VAR /////


extend_last: "..."
no_transition: "_"
_VAR_OPEN: /[({]/
_VAR_CLOSE: /[)}]/
// Match all alphabetical strings of text except capitalized compass directions (N, NE, E, SE, S, SW, W, NW)
// Equivalent to /(?!NE|SE|SW|NW|N|E|S|W)[A-Za-z]+|(?:NE|SE|SW|NW)[A-Za-z]+|(?:N|E|S|W)(?!E|W)[A-Za-z]+/,
// but takes fewer steps. Courtesy of Dr. Memes#1508 (138628718968045568) on Discord's "The Coding Den"
VARNAME: /(?<![A-Za-z])(?!(?:[NS][EW]?|[EW])(?![A-Za-z]))[A-Za-z]+/
range: INT [_WS? "-"] _WS? _RANGE_SEP _WS? INT
_RANGE_SEP: ".."

_NL:  NEWLINE 
%import common (INT, UCASE_LETTER, LCASE_LETTER, WORD, CNAME, NEWLINE)

_WS: /\s+/
COMMENT: /\s*#[^\n]*/
%ignore COMMENT